# Default values for mediamtx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/latarc/mediamtx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# deployment annotations
annotations: {}

# only used with deployment mode
revisionHistoryLimit: 10

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
livenessProbe: {}
readinessProbe: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          svcPort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: {}

extraEnvs: []
extraEnvsFrom: []

service:
  type: ClusterIP
  annotations: {}

ports:
  rtsp:
    enabled: true
    containerPort: 8854
    protocol: TCP
    servicePort: 8854
  rtmp:
    enabled: true
    containerPort: 1935
    protocol: TCP
    servicePort: 1935
  hls:
    enabled: true
    containerPort: 8888
    protocol: TCP
    servicePort: 8888

configMap:
  create: true


# Use existing configmap -> remember set configMap.create to false and set customConfig to the path:  /path/to/config/mediamtx.yml
#customConfig: /path/to/config/mediamtx.yml

extraVolumes: []
extraVolumeMounts: []
# extraVolumes:
#   - name: custom
#     configMap:
#       name: mediamtx-config
#       items:
#         - key: mediamtx
#           path: mediamtx.yml
#       defaultMode: 420
# extraVolumeMounts:
#   - name: mediamtx-vol
#     mountPath: /path/to/config/mediamtx.yml



mediamtx: |
  hlsAlwaysRemux: yes
  hlsSegmentCount: 50
  paths:
    external:
      source: https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8
